// Code generated by templ - DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Toast() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"toast-container\" class=\"fixed bottom-2 right-2 flex flex-col gap-2 z-50\"></div><script>\n\t\twindow.Toaster = {\n\t\t\tshow: function(message, options = {}) {\n\t\t\t\tconst defaults = {\n\t\t\t\t\ttype: 'default', // default, success, error\n\t\t\t\t\tduration: 3000,\n\t\t\t\t\taction: null,\n\t\t\t\t}\n\n\t\t\t\tconst settings = { ...defaults, ...options }\n\n\t\t\t\tconst container = document.getElementById('toast-container')\n\t\t\t\tconst toast = document.createElement('div')\n\n\t\t\t\t// Base styles\n\t\t\t\ttoast.className = 'flex items-center gap-2 min-w-[300px] p-4 rounded-lg shadow-lg transform transition-all duration-300 ease-out translate-x-full'\n\n\t\t\t\t// Type-specific styles\n\t\t\t\tconst typeStyles = {\n\t\t\t\t\tdefault: 'bg-gray-800 text-white',\n\t\t\t\t\tsuccess: 'bg-green-800 text-white',\n\t\t\t\t\terror: 'bg-red-800 text-white'\n\t\t\t\t}\n\n\t\t\t\ttoast.className += ' ' + (typeStyles[settings.type] || typeStyles.default)\n\n\t\t\t\t// Message\n\t\t\t\tconst messageSpan = document.createElement('span')\n\t\t\t\tmessageSpan.className = 'flex-grow'\n\t\t\t\tmessageSpan.textContent = message\n\t\t\t\ttoast.appendChild(messageSpan)\n\n\t\t\t\t// Close button\n\t\t\t\tconst closeButton = document.createElement('button')\n\t\t\t\tcloseButton.className = 'text-white/80 hover:text-white transition-colors'\n\t\t\t\tcloseButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>`\n\t\t\t\tcloseButton.onclick = () => removeToast(toast)\n\t\t\t\ttoast.appendChild(closeButton)\n\n\t\t\t\t// Action button if provided\n\t\t\t\tif (settings.action) {\n\t\t\t\t\tconst actionButton = document.createElement('button')\n\t\t\t\t\tactionButton.className = 'text-white/80 hover:text-white transition-colors underline'\n\t\t\t\t\tactionButton.textContent = settings.action.text\n\t\t\t\t\tactionButton.onclick = () => {\n\t\t\t\t\t\tsettings.action.onClick()\n\t\t\t\t\t\tremoveToast(toast)\n\t\t\t\t\t}\n\t\t\t\t\ttoast.insertBefore(actionButton, closeButton)\n\t\t\t\t}\n\n\t\t\t\tcontainer.appendChild(toast)\n\n\t\t\t\t// Trigger animation after a small delay to ensure the initial state is rendered\n\t\t\t\trequestAnimationFrame(\n\t\t\t\t\t() => {\n\t\t\t\t\t\ttoast.classList.remove('translate-x-full')\n\t\t\t\t\t\ttoast.classList.add('translate-x-0')\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\t// Auto remove after duration\n\t\t\t\tif (settings.duration > 0) {\n\t\t\t\t\tsetTimeout(() => removeToast(toast), settings.duration)\n\t\t\t\t}\n\n\t\t\t\tfunction removeToast(toast) {\n\t\t\t\t\ttoast.classList.remove('translate-x-0')\n\t\t\t\t\ttoast.classList.add('translate-x-full')\n\t\t\t\t\tsetTimeout(() => toast.remove(), 300) // Match the transition duration\n\t\t\t\t}\n\n\t\t\t\treturn toast\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
