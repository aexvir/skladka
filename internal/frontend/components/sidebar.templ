package components

import (
	"fmt"
	"github.com/aexvir/skladka/internal/frontend/icons"
	"github.com/aexvir/skladka/internal/paste"
	"strconv"
)

templ Sidebar() {
	<div class="h-[90vh] lg:h-full w-full lg:w-[300px] flex-none lg:border-l border-main fixed inset-x-0 -bottom-full lg:static transition-all duration-300" id="sidebar">
		<div class="h-full">
			<form method="POST" action="/" class="h-full bg-main p-4 flex flex-col lowercase rounded-t-2xl lg:rounded-none shadow-xl lg:shadow-none" id="paste-form">
				<div class="flex-grow space-y-4">
					@TextInput("title", "title", "", icons.Paperclip(14, 14, "text-muted"))
					@TagsInput("tags", "tags", icons.Tag(14, 14, "text-muted"))
					@SelectInput("syntax", "syntax highlight", icons.Code(14, 14, "text-muted"), "plaintext", "go", "python", "javascript")
					@ToggleWithContent("toggle-password", "", "password protection", icons.Lock(14, 14, "text-muted")) {
						@PasswordInput("password", "password", "")
					}
					@ToggleWithContent("toggle-expiration", "", "expiration", icons.Clock(14, 14, "text-muted")) {
						@SelectInput("expiration", "", icons.Clock(14, 14, "text-muted"), "10m", "30m", "1h", "1d")
					}
					@Toggle("toggle-unlisted", "unlisted", "unlisted", icons.Eye(14, 14, "text-muted"))
					<input type="hidden" name="content" id="editor-content"/>
				</div>
				<div class="flex flex-row w-full fixed inset-x-0 bottom-0 lg:static p-4 lg:p-0">
					<button type="submit" class="w-full bg-accent text-accent-muted py-2 rounded-l lg:rounded transition-all duration-200 hover:bg-accent-muted hover:shadow-md">
						<span class="flex-grow">paste</span>
					</button>
					<div class="w-12 flex items-center justify-center border-l border-main cursor-pointer lg:hidden rounded-r bg-accent" id="expand-sidebar">
						@icons.ChevronUp(18, 18, "text-accent-muted transform transition-all duration-200")
					</div>
				</div>
			</form>
		</div>
		@initSidebar()
	</div>
}

templ Metadata(paste paste.Paste) {
	<div class="h-full lg:w-[300px] flex-none border-l border-main">
		<div class="h-full bg-main flex flex-col p-4">
			<div class="flex-grow">
				<h1 class="text-2xl text-main" id="paste-title">{ paste.Title }</h1>
				<div class="flex flex-row w-full text-sm gap-2">
					<span class="text-blue-400">&#64;aexvir</span>
					Â·
					<span class="text-muted flex flex-row items-center gap-2">
						@icons.Calendar(14, 14, "text-muted")
						{ paste.Creation.Format("Jan 2, 2006") }
					</span>
				</div>
				<div class="flex flex-row justify-center gap-2 py-4 text-sm">
					{{ size := fmt.Sprintf("%.1f", float64(len([]byte(paste.Content)))/1024.0) }}
					{ strconv.Itoa(paste.Views) } views | { paste.Syntax } | { size }kb
				</div>
				if len(paste.Tags) > 0 {
					<div class="space-y-1">
						<label class="text-sm flex flex-row gap-2 items-center">
							@icons.Tag(14, 14, "text-muted")
							tags
						</label>
						<div class="flex flex-wrap gap-1">
							for _, tag := range paste.Tags {
								<span class="bg-muted text-muted border border-main px-2 py-0.5 rounded text-sm">{ tag }</span>
							}
						</div>
					</div>
				}
				if paste.Expiration != nil {
					<div class="w-full mt-4 border-t border-main"></div>
					<div class="flex flex-row justify-center gap-2 py-4 text-red-400">
						expires { paste.Expiration.Format("Jan 2, 2006") }
					</div>
				}
			</div>
			<div class="flex flex-row w-full">
				<button onclick="window.Editor.copyToClipboard()" type="button" class="rounded-l w-full text-center bg-muted hover:bg-accent text-main hover:text-accent-muted px-4 py-2 hover:shadow-md transition-all duration-200 whitespace-nowrap">copy</button>
				<a href={ templ.URL(fmt.Sprintf("/%s/raw", paste.Reference)) } class="w-full text-center bg-muted hover:bg-accent text-main hover:text-accent-muted px-4 py-2 hover:shadow-md transition-all duration-200 whitespace-nowrap">raw</a>
				<button onclick="window.Editor.downloadAsFile()" type="button" class="rounded-r w-full text-center bg-muted hover:bg-accent text-main hover:text-accent-muted px-4 py-2 hover:shadow-md transition-all duration-200 whitespace-nowrap">download</button>
			</div>
		</div>
	</div>
}

script initSidebar() {
    document.addEventListener(
        'DOMContentLoaded', () => {
            const sidebar = document.getElementById('sidebar')
            const expandbtn = document.getElementById('expand-sidebar')
            const expandicon = expandbtn.querySelector('svg')

            let sidebarExpanded = false

            const toggleSidebar = () => {
                sidebarExpanded = !sidebarExpanded
                sidebar.style.bottom = sidebarExpanded ? '0' : '-100%'
                expandicon.style.transform = sidebarExpanded ? 'rotate(180deg)': 'rotate(0deg)'
            }

            expandbtn.addEventListener(
                'click', (e) => {
                    e.stopPropagation()
                    toggleSidebar()
                }
            )

            document.
                querySelector('select[name="syntax"]').
                addEventListener(
                    'change', (e) => {
                        window.Editor.setSyntax(e.target.value)
                    }
                )

            document.
                querySelector('form').
                addEventListener(
                    'submit', (e) => {
                        const editorContent = window.Editor.getContent()
                        document.getElementById('editor-content').value = editorContent
                    }
                )
        }
    )
}
